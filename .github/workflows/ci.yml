name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linux-ci:
    name: Linux CI
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cursor_usage_tracker
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cursor_usage_tracker?schema=public
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Enable Corepack
        run: corepack enable
      - name: Compute pnpm store
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ubuntu-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ubuntu-pnpm-store-
      - run: pnpm --version
      - run: pnpm install --frozen-lockfile
      - name: Prisma Generate
        run: pnpm --filter @cursor-usage/db run db:generate
      - name: Build
        run: pnpm build
      - run: pnpm lint
      - run: pnpm test

  windows-ci:
    name: Windows CI
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: pnpm install --frozen-lockfile
      - name: Prisma Generate
        run: pnpm --filter @cursor-usage/db run db:generate
      - name: Build
        run: pnpm build
      - name: Lint
        run: pnpm lint
      - name: Test
        run: pnpm test
